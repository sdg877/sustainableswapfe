{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import SwapForm from './SwapForm';\n// import { currentUser } from '../lib/currentUser'; \n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n\n//   const [item, setItem] = useState(null);\n//   const [swaps, setSwaps] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const loggedInUserId = currentUser(); // Get current user ID\n\n//   const handleFormSubmit = async (formData) => {\n//     try {\n//       const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData);\n//       const newSwap = response.data;\n//       setSwaps(prevSwaps => [...prevSwaps, newSwap]);\n//     } catch (error) {\n//       console.error('Error submitting offer:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     const fetchItemDetails = async () => {\n//       try {\n//         const [itemResponse, swapsResponse] = await Promise.all([\n//           axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`),\n//           axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//         ]);\n//         setItem(itemResponse.data);\n//         setSwaps(swapsResponse.data);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching item details:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchItemDetails();\n//   }, [itemId]);\n\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (!item) {\n//     return <p>Error: Item not found</p>;\n//   }\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       <div className=\"item-card enlarged\">\n//         <h1>{item.item_title}</h1>\n//         <p>{item.item_description}</p>\n//           <img\n//             src={item.image_url}\n//             alt={item.item_title}\n//           />\n//         <h4>Swaps:</h4>\n//         <div>\n//           {swaps.length > 0 ? (\n//             swaps.map(swap => (\n//               <p key={swap.id}>{swap.item_title}, {swap.item_description}</p>\n//             ))\n//           ) : (\n//             <p>No offers yet</p>\n//           )}\n//         </div>\n//         {loggedInUserId && item && item.item_user !== loggedInUserId && (\n//         <SwapForm onSubmit={handleFormSubmit} ownerId={item.item_user} itemId={item.item_id} />\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;","map":{"version":3,"names":[],"sources":["/Users/sylviadrake-gill/code/sustainableswapshop/frontend/my-react-app/src/Components/ItemViewPage.jsx"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import SwapForm from './SwapForm';\n// import { currentUser } from '../lib/currentUser'; \n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n\n//   const [item, setItem] = useState(null);\n//   const [swaps, setSwaps] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const loggedInUserId = currentUser(); // Get current user ID\n\n//   const handleFormSubmit = async (formData) => {\n//     try {\n//       const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData);\n//       const newSwap = response.data;\n//       setSwaps(prevSwaps => [...prevSwaps, newSwap]);\n//     } catch (error) {\n//       console.error('Error submitting offer:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     const fetchItemDetails = async () => {\n//       try {\n//         const [itemResponse, swapsResponse] = await Promise.all([\n//           axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`),\n//           axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//         ]);\n//         setItem(itemResponse.data);\n//         setSwaps(swapsResponse.data);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching item details:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchItemDetails();\n//   }, [itemId]);\n\n\n\n\n\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (!item) {\n//     return <p>Error: Item not found</p>;\n//   }\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       <div className=\"item-card enlarged\">\n//         <h1>{item.item_title}</h1>\n//         <p>{item.item_description}</p>\n//           <img\n//             src={item.image_url}\n//             alt={item.item_title}\n//           />\n//         <h4>Swaps:</h4>\n//         <div>\n//           {swaps.length > 0 ? (\n//             swaps.map(swap => (\n//               <p key={swap.id}>{swap.item_title}, {swap.item_description}</p>\n//             ))\n//           ) : (\n//             <p>No offers yet</p>\n//           )}\n//         </div>\n//         {loggedInUserId && item && item.item_user !== loggedInUserId && (\n//         <SwapForm onSubmit={handleFormSubmit} ownerId={item.item_user} itemId={item.item_id} />\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}