{"ast":null,"code":"var _jsxFileName = \"/Users/sylviadrake-gill/code/sustainableswapshop/frontend/my-react-app/src/Components/ItemViewPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [, setShowForm] = useState(false);\n//   const [swaps, setSwaps] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//     axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n//       .then(response => {\n//         console.log(\"Offer submitted:\", response.data);\n//         const newSwap = response.data;\n//         setSwaps(prevSwaps => [...prevSwaps, newSwap]);\n//         setShowForm(false);\n//       })\n//       .catch(error => {\n//         console.error('Error submitting offer:', error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     const fetchSwaps = () => {\n//       axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//         .then(response => {\n//           setSwaps(response.data);\n//         })\n//         .catch(error => {\n//           console.error('Error fetching swaps:', error);\n//         });\n//     };\n\n//     // Fetch item details\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//         console.log(response.data);\n//         fetchSwaps(); // Fetch swaps inside the useEffect callback\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n//   }, [itemId]); // itemId is still a dependency here\n\n//   const s3BaseUrl = \"https://sdg-ga-seb77.s3.amazonaws.com\"\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {item.image && (\n//             <img\n//             src={`${s3BaseUrl}/${item.image_url}/`}\n//             alt={item.item_title}\n//             />\n//             )}\n//           <h4>Swaps:</h4>\n//           <div>\n//             {swaps.length > 0 ? (\n//               swaps.map(swap => (\n//                 <p>{swap.item_title}, {swap.item_description}</p>\n//               ))\n//             ) : (\n//               <p>No offers yet</p>\n//             )}\n//           </div>\n//           <SwapForm onSubmit={handleFormSubmit} ownerId={item.user} itemId={item.item_id} />\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport SwapForm from './SwapForm';\nimport { currentUser } from '../lib/currentUser'; // Importing currentUser function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemViewPage() {\n  _s();\n  const {\n    itemId\n  } = useParams();\n  const [item, setItem] = useState(null);\n  const [swaps, setSwaps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const loggedInUserId = currentUser(); // Call the currentUser function to get the current user ID\n\n  const handleFormSubmit = formData => {\n    axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData).then(response => {\n      console.log(\"Offer submitted:\", response.data);\n      const newSwap = response.data;\n      setSwaps(prevSwaps => [...prevSwaps, newSwap]);\n    }).catch(error => {\n      console.error('Error submitting offer:', error);\n    });\n  };\n  useEffect(() => {\n    const fetchItemDetails = async () => {\n      try {\n        const itemResponse = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`);\n        setItem(itemResponse.data);\n        const swapsResponse = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`);\n        setSwaps(swapsResponse.data);\n        setLoading(false); // Set loading to false when data is fetched successfully\n      } catch (error) {\n        console.error('Error fetching item details:', error);\n        setLoading(false); // Set loading to false even if there's an error\n      }\n    };\n    fetchItemDetails();\n  }, [itemId]);\n  const s3BaseUrl = \"https://sdg-ga-seb77.s3.amazonaws.com\";\n  console.log(\"Logged In User ID:\", loggedInUserId);\n  console.log(\"Item:\", item);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 12\n    }, this);\n  }\n  if (!item) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error: Item not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centered-item-card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-card enlarged\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.item_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.item_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), item.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${s3BaseUrl}/${item.image_url}/`,\n        alt: item.item_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Swaps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: swaps.length > 0 ? swaps.map(swap => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [swap.item_title, \", \", swap.item_description]\n        }, swap.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No offers yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), loggedInUserId !== item.item_user &&\n      /*#__PURE__*/\n      // Adjusted condition here\n      _jsxDEV(SwapForm, {\n        onSubmit: handleFormSubmit,\n        ownerId: item.item_user,\n        itemId: item.item_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemViewPage, \"LEqP59mroP6pq6JC0yfYtG+rQJU=\", false, function () {\n  return [useParams];\n});\n_c = ItemViewPage;\nexport default ItemViewPage;\nvar _c;\n$RefreshReg$(_c, \"ItemViewPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","SwapForm","currentUser","jsxDEV","_jsxDEV","ItemViewPage","_s","itemId","item","setItem","swaps","setSwaps","loading","setLoading","loggedInUserId","handleFormSubmit","formData","post","process","env","REACT_APP_BACKEND_URL","then","response","console","log","data","newSwap","prevSwaps","catch","error","fetchItemDetails","itemResponse","get","swapsResponse","s3BaseUrl","children","fileName","_jsxFileName","lineNumber","columnNumber","className","item_title","item_description","image","src","image_url","alt","length","map","swap","id","item_user","onSubmit","ownerId","item_id","_c","$RefreshReg$"],"sources":["/Users/sylviadrake-gill/code/sustainableswapshop/frontend/my-react-app/src/Components/ItemViewPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [, setShowForm] = useState(false);\n//   const [swaps, setSwaps] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//     axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n//       .then(response => {\n//         console.log(\"Offer submitted:\", response.data);\n//         const newSwap = response.data;\n//         setSwaps(prevSwaps => [...prevSwaps, newSwap]);\n//         setShowForm(false);\n//       })\n//       .catch(error => {\n//         console.error('Error submitting offer:', error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     const fetchSwaps = () => {\n//       axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//         .then(response => {\n//           setSwaps(response.data);\n//         })\n//         .catch(error => {\n//           console.error('Error fetching swaps:', error);\n//         });\n//     };\n\n//     // Fetch item details\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//         console.log(response.data);\n//         fetchSwaps(); // Fetch swaps inside the useEffect callback\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n//   }, [itemId]); // itemId is still a dependency here\n\n//   const s3BaseUrl = \"https://sdg-ga-seb77.s3.amazonaws.com\"\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {item.image && (\n//             <img\n//             src={`${s3BaseUrl}/${item.image_url}/`}\n//             alt={item.item_title}\n//             />\n//             )}\n//           <h4>Swaps:</h4>\n//           <div>\n//             {swaps.length > 0 ? (\n//               swaps.map(swap => (\n//                 <p>{swap.item_title}, {swap.item_description}</p>\n//               ))\n//             ) : (\n//               <p>No offers yet</p>\n//             )}\n//           </div>\n//           <SwapForm onSubmit={handleFormSubmit} ownerId={item.user} itemId={item.item_id} />\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport SwapForm from './SwapForm';\nimport { currentUser } from '../lib/currentUser'; // Importing currentUser function\n\nfunction ItemViewPage() {\n  const { itemId } = useParams();\n\n  const [item, setItem] = useState(null);\n  const [swaps, setSwaps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const loggedInUserId = currentUser(); // Call the currentUser function to get the current user ID\n\n  const handleFormSubmit = (formData) => {\n    axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n      .then(response => {\n        console.log(\"Offer submitted:\", response.data);\n        const newSwap = response.data;\n        setSwaps(prevSwaps => [...prevSwaps, newSwap]);\n      })\n      .catch(error => {\n        console.error('Error submitting offer:', error);\n      });\n  };\n\n  useEffect(() => {\n    const fetchItemDetails = async () => {\n      try {\n        const itemResponse = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`);\n        setItem(itemResponse.data);\n        \n        const swapsResponse = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`);\n        setSwaps(swapsResponse.data);\n        setLoading(false); // Set loading to false when data is fetched successfully\n      } catch (error) {\n        console.error('Error fetching item details:', error);\n        setLoading(false); // Set loading to false even if there's an error\n      }\n    };\n\n    fetchItemDetails();\n  }, [itemId]);\n\n  const s3BaseUrl = \"https://sdg-ga-seb77.s3.amazonaws.com\";\n\n  console.log(\"Logged In User ID:\", loggedInUserId);\n  console.log(\"Item:\", item);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (!item) {\n    return <p>Error: Item not found</p>;\n  }\n\n  return (\n    <div className=\"centered-item-card-container\">\n      <div className=\"item-card enlarged\">\n        <h1>{item.item_title}</h1>\n        <p>{item.item_description}</p>\n        {item.image && (\n          <img\n            src={`${s3BaseUrl}/${item.image_url}/`}\n            alt={item.item_title}\n          />\n        )}\n        <h4>Swaps:</h4>\n        <div>\n          {swaps.length > 0 ? (\n            swaps.map(swap => (\n              <p key={swap.id}>{swap.item_title}, {swap.item_description}</p>\n            ))\n          ) : (\n            <p>No offers yet</p>\n          )}\n        </div>\n        {loggedInUserId !== item.item_user && ( // Adjusted condition here\n          <SwapForm onSubmit={handleFormSubmit} ownerId={item.item_user} itemId={item.item_id} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ItemViewPage;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}