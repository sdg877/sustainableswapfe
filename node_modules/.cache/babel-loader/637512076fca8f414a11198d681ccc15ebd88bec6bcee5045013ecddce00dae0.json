{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n\n//   useEffect(() => {\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n//   }, [itemId]);\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n\n//   useEffect(() => {\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n//   }, [itemId]);\n\n//   const handleFormSubmit = (formData) => {\n//     // You can perform your submission logic here, such as sending the offer to the backend\n//     console.log(\"Offer submitted:\", formData);\n//     setShowForm(false); // Hide the form after submission\n//   };\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {showForm ? (\n//             <SwapForm onSubmit={handleFormSubmit} />\n//           ) : (\n//             <button onClick={() => setShowForm(true)}>Make Offer</button>\n//           )}\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n//   const [swaps, setSwaps] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//   // Submit the offer data to the backend\n//   axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n//     .then(response => {\n//       console.log(\"Offer submitted:\", response.data);\n//       // Refresh the swaps list to display the newly added swap\n//       axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//         .then(response => {\n//           setSwaps(response.data);\n//         })\n//         .catch(error => {\n//           console.error('Error fetching swaps:', error);\n//         });\n//       setShowForm(false); // Hide the form after successful submission\n//     })\n//     .catch(error => {\n//       console.error('Error submitting offer:', error);\n//       // Handle error\n//     });\n// };\n\n//   useEffect(() => {\n//     // Fetch item details and swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n\n//     // Fetch swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//       .then(response => {\n//         setSwaps(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching swaps:', error);\n//       });\n//   }, [itemId]);\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {/* Display existing swaps */}\n//           <h2>Swaps:</h2>\n//           <ul>\n//             {swaps.length > 0 ? (\n//               swaps.map(swap => (\n//                 <li key={swap.id}>{swap.offer}</li>\n//               ))\n//             ) : (\n//               <li>No offers yet</li>\n//             )}\n//           </ul>\n//           {/* Show swap form */}\n//           <SwapForm onSubmit={handleFormSubmit} ownerId={item.user} />\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n//       }\n\n// export default ItemViewPage;","map":{"version":3,"names":[],"sources":["/Users/sylviadrake-gill/code/sustainableswapshop/frontend/my-react-app/src/Components/ItemViewPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n\n//   useEffect(() => {\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n//   }, [itemId]);\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n\n//   useEffect(() => {\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n//   }, [itemId]);\n\n//   const handleFormSubmit = (formData) => {\n//     // You can perform your submission logic here, such as sending the offer to the backend\n//     console.log(\"Offer submitted:\", formData);\n//     setShowForm(false); // Hide the form after submission\n//   };\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {showForm ? (\n//             <SwapForm onSubmit={handleFormSubmit} />\n//           ) : (\n//             <button onClick={() => setShowForm(true)}>Make Offer</button>\n//           )}\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n//   const [swaps, setSwaps] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//   // Submit the offer data to the backend\n//   axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n//     .then(response => {\n//       console.log(\"Offer submitted:\", response.data);\n//       // Refresh the swaps list to display the newly added swap\n//       axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//         .then(response => {\n//           setSwaps(response.data);\n//         })\n//         .catch(error => {\n//           console.error('Error fetching swaps:', error);\n//         });\n//       setShowForm(false); // Hide the form after successful submission\n//     })\n//     .catch(error => {\n//       console.error('Error submitting offer:', error);\n//       // Handle error\n//     });\n// };\n\n//   useEffect(() => {\n//     // Fetch item details and swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n  \n//     // Fetch swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//       .then(response => {\n//         setSwaps(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching swaps:', error);\n//       });\n//   }, [itemId]);\n  \n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {/* Display existing swaps */}\n//           <h2>Swaps:</h2>\n//           <ul>\n//             {swaps.length > 0 ? (\n//               swaps.map(swap => (\n//                 <li key={swap.id}>{swap.offer}</li>\n//               ))\n//             ) : (\n//               <li>No offers yet</li>\n//             )}\n//           </ul>\n//           {/* Show swap form */}\n//           <SwapForm onSubmit={handleFormSubmit} ownerId={item.user} />\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n//       }\n\n// export default ItemViewPage;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}