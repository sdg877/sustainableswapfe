{"ast":null,"code":"var _jsxFileName = \"/Users/sylviadrake-gill/code/sustainableswapshop/frontend/my-react-app/src/Components/ItemViewPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n\n//   useEffect(() => {\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n//   }, [itemId]);\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n\n//   useEffect(() => {\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n//   }, [itemId]);\n\n//   const handleFormSubmit = (formData) => {\n//     // You can perform your submission logic here, such as sending the offer to the backend\n//     console.log(\"Offer submitted:\", formData);\n//     setShowForm(false); // Hide the form after submission\n//   };\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {showForm ? (\n//             <SwapForm onSubmit={handleFormSubmit} />\n//           ) : (\n//             <button onClick={() => setShowForm(true)}>Make Offer</button>\n//           )}\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n//   const [swaps, setSwaps] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//   // Submit the offer data to the backend\n//   axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n//     .then(response => {\n//       console.log(\"Offer submitted:\", response.data);\n//       // Refresh the swaps list to display the newly added swap\n//       axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//         .then(response => {\n//           setSwaps(response.data);\n//         })\n//         .catch(error => {\n//           console.error('Error fetching swaps:', error);\n//         });\n//       setShowForm(false); // Hide the form after successful submission\n//     })\n//     .catch(error => {\n//       console.error('Error submitting offer:', error);\n//       // Handle error\n//     });\n// };\n\n//   useEffect(() => {\n//     // Fetch item details and swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n\n//     // Fetch swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//       .then(response => {\n//         setSwaps(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching swaps:', error);\n//       });\n//   }, [itemId]);\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {/* Display existing swaps */}\n//           <h2>Swaps:</h2>\n//           <ul>\n//             {swaps.length > 0 ? (\n//               swaps.map(swap => (\n//                 <li key={swap.id}>{swap.offer}</li>\n//               ))\n//             ) : (\n//               <li>No offers yet</li>\n//             )}\n//           </ul>\n//           {/* Show swap form */}\n//           <SwapForm onSubmit={handleFormSubmit} ownerId={item.user} />\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n//       }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n//   const [swaps, setSwaps] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//     // Submit the offer data to the backend\n//     axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n//       .then(response => {\n//         console.log(\"Offer submitted:\", response.data);\n//         // Refresh the swaps list to display the newly added swap\n//         axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//           .then(response => {\n//             setSwaps(response.data);\n//           })\n//           .catch(error => {\n//             console.error('Error fetching swaps:', error);\n//           });\n//         setShowForm(false); // Hide the form after successful submission\n//       })\n//       .catch(error => {\n//         console.error('Error submitting offer:', error);\n//         // Handle error\n//       });\n//   };\n\n//   useEffect(() => {\n//     // Fetch item details and swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n\n//     // Fetch swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//       .then(response => {\n//         setSwaps(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching swaps:', error);\n//       });\n//   }, [itemId]);\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {/* Display the image */}\n//           {item.image_path && (\n//             <img src={`https://sdg-ga-seb77.s3.amazonaws.com/${item.image_path}`} alt={item.item_title} />\n//           )}\n//           {/* Display existing swaps */}\n//           <h2>Swaps:</h2>\n//           <ul>\n//             {swaps.length > 0 ? (\n//               swaps.map(swap => (\n//                 <li key={swap.id}>{swap.offer}</li>\n//               ))\n//             ) : (\n//               <li>No offers yet</li>\n//             )}\n//           </ul>\n//           {/* Show swap form */}\n//           <SwapForm onSubmit={handleFormSubmit} ownerId={item.user} />\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n//   const [swaps, setSwaps] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//     axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n//       .then(response => {\n//         console.log(\"Offer submitted:\", response.data);\n//         fetchSwaps();\n//         setShowForm(false);\n//       })\n//       .catch(error => {\n//         console.error('Error submitting offer:', error);\n//         // Handle error\n//       });\n//   };\n\n//   const fetchSwaps = () => {\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//       .then(response => {\n//         setSwaps(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching swaps:', error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     // Fetch item details\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n\n//     // Fetch swaps associated with the item\n//     fetchSwaps();\n//   }, [itemId]);\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {item.image && (\n//             <>\n//             console.log(`${process.env.REACT_APP_S3_BUCKET_NAME}/${item.image_path}`);\n//             <img\n//             src={`${process.env.REACT_APP_S3_BUCKET_NAME}/${item.image}`}\n//             alt={item.item_title}\n//             />\n//             </>\n//           )}\n//           <h2>Swaps:</h2>\n//           <ul>\n//             {swaps && swaps.length > 0 ? (\n//               swaps.map(swap => (\n//                 <li key={swap.id}>{swap.offer}</li>\n//               ))\n//             ) : (\n//               <li>No offers yet</li>\n//             )}\n//           </ul>\n//           <SwapForm onSubmit={handleFormSubmit} ownerId={item.user} />\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport '../App/App.css';\nimport SwapForm from './SwapForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemViewPage() {\n  _s();\n  const {\n    itemId\n  } = useParams();\n  console.log(\"Item ID:\", itemId);\n  const [item, setItem] = useState(null);\n  const [swaps, setSwaps] = useState([]);\n  const handleFetchItem = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}`);\n      setItem(response.data);\n    } catch (error) {\n      console.error('Error fetching item:', error);\n      // Display an error message to the user\n    }\n  };\n  const handleFetchSwaps = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`);\n      setSwaps(response.data);\n    } catch (error) {\n      console.error('Error fetching swaps:', error);\n      // Display an error message to the user\n    }\n  };\n  useEffect(() => {\n    handleFetchItem();\n    handleFetchSwaps();\n  }, [itemId]);\n  const handleFormSubmit = async formData => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData);\n      console.log(\"Offer submitted:\", response.data);\n      // Update UI to show the submitted swap offer\n      // (e.g., re-fetch swaps or update state directly)\n      handleFetchSwaps(); // Example: Re-fetch swaps to update UI\n    } catch (error) {\n      console.error('Error submitting offer:', error);\n      // Display an error message to the user\n    }\n  };\n  if (!item) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading item details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-view-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: item.item_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.item_description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Swaps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), swaps.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: swaps.map(swap => /*#__PURE__*/_jsxDEV(\"li\", {}, swap.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No swaps yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Submit a Swap Offer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwapForm, {\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemViewPage, \"jQC8Cu0/bnc3U/3lBt0aOXRjmTA=\", false, function () {\n  return [useParams];\n});\n_c = ItemViewPage;\nexport default ItemViewPage;\nvar _c;\n$RefreshReg$(_c, \"ItemViewPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","SwapForm","jsxDEV","_jsxDEV","ItemViewPage","_s","itemId","console","log","item","setItem","swaps","setSwaps","handleFetchItem","response","get","process","env","REACT_APP_BACKEND_URL","data","error","handleFetchSwaps","handleFormSubmit","formData","post","children","fileName","_jsxFileName","lineNumber","columnNumber","className","item_title","item_description","length","map","swap","id","onSubmit","_c","$RefreshReg$"],"sources":["/Users/sylviadrake-gill/code/sustainableswapshop/frontend/my-react-app/src/Components/ItemViewPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n\n//   useEffect(() => {\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n//   }, [itemId]);\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n\n//   useEffect(() => {\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n//   }, [itemId]);\n\n//   const handleFormSubmit = (formData) => {\n//     // You can perform your submission logic here, such as sending the offer to the backend\n//     console.log(\"Offer submitted:\", formData);\n//     setShowForm(false); // Hide the form after submission\n//   };\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {showForm ? (\n//             <SwapForm onSubmit={handleFormSubmit} />\n//           ) : (\n//             <button onClick={() => setShowForm(true)}>Make Offer</button>\n//           )}\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n//   const [swaps, setSwaps] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//   // Submit the offer data to the backend\n//   axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n//     .then(response => {\n//       console.log(\"Offer submitted:\", response.data);\n//       // Refresh the swaps list to display the newly added swap\n//       axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//         .then(response => {\n//           setSwaps(response.data);\n//         })\n//         .catch(error => {\n//           console.error('Error fetching swaps:', error);\n//         });\n//       setShowForm(false); // Hide the form after successful submission\n//     })\n//     .catch(error => {\n//       console.error('Error submitting offer:', error);\n//       // Handle error\n//     });\n// };\n\n//   useEffect(() => {\n//     // Fetch item details and swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n  \n//     // Fetch swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//       .then(response => {\n//         setSwaps(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching swaps:', error);\n//       });\n//   }, [itemId]);\n  \n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {/* Display existing swaps */}\n//           <h2>Swaps:</h2>\n//           <ul>\n//             {swaps.length > 0 ? (\n//               swaps.map(swap => (\n//                 <li key={swap.id}>{swap.offer}</li>\n//               ))\n//             ) : (\n//               <li>No offers yet</li>\n//             )}\n//           </ul>\n//           {/* Show swap form */}\n//           <SwapForm onSubmit={handleFormSubmit} ownerId={item.user} />\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n//       }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n//   const [swaps, setSwaps] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//     // Submit the offer data to the backend\n//     axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n//       .then(response => {\n//         console.log(\"Offer submitted:\", response.data);\n//         // Refresh the swaps list to display the newly added swap\n//         axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//           .then(response => {\n//             setSwaps(response.data);\n//           })\n//           .catch(error => {\n//             console.error('Error fetching swaps:', error);\n//           });\n//         setShowForm(false); // Hide the form after successful submission\n//       })\n//       .catch(error => {\n//         console.error('Error submitting offer:', error);\n//         // Handle error\n//       });\n//   };\n\n//   useEffect(() => {\n//     // Fetch item details and swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n  \n//     // Fetch swaps associated with the item\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//       .then(response => {\n//         setSwaps(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching swaps:', error);\n//       });\n//   }, [itemId]);\n  \n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {/* Display the image */}\n//           {item.image_path && (\n//             <img src={`https://sdg-ga-seb77.s3.amazonaws.com/${item.image_path}`} alt={item.item_title} />\n//           )}\n//           {/* Display existing swaps */}\n//           <h2>Swaps:</h2>\n//           <ul>\n//             {swaps.length > 0 ? (\n//               swaps.map(swap => (\n//                 <li key={swap.id}>{swap.offer}</li>\n//               ))\n//             ) : (\n//               <li>No offers yet</li>\n//             )}\n//           </ul>\n//           {/* Show swap form */}\n//           <SwapForm onSubmit={handleFormSubmit} ownerId={item.user} />\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import '../App/App.css';\n// import SwapForm from './SwapForm';\n\n// function ItemViewPage() {\n//   const { itemId } = useParams();\n//   console.log(\"Item ID:\", itemId);\n\n//   const [item, setItem] = useState(null);\n//   const [showForm, setShowForm] = useState(false);\n//   const [swaps, setSwaps] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//     axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData)\n//       .then(response => {\n//         console.log(\"Offer submitted:\", response.data);\n//         fetchSwaps();\n//         setShowForm(false);\n//       })\n//       .catch(error => {\n//         console.error('Error submitting offer:', error);\n//         // Handle error\n//       });\n//   };\n\n\n\n//   const fetchSwaps = () => {\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`)\n//       .then(response => {\n//         setSwaps(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching swaps:', error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     // Fetch item details\n//     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/`)\n//       .then(response => {\n//         setItem(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching item details:', error);\n//       });\n\n//     // Fetch swaps associated with the item\n//     fetchSwaps();\n//   }, [itemId]);\n\n//   return (\n//     <div className=\"centered-item-card-container\">\n//       {item ? (\n//         <div className=\"item-card enlarged\">\n//           <h1>{item.item_title}</h1>\n//           <p>{item.item_description}</p>\n//           {item.image && (\n//             <>\n//             console.log(`${process.env.REACT_APP_S3_BUCKET_NAME}/${item.image_path}`);\n//             <img\n//             src={`${process.env.REACT_APP_S3_BUCKET_NAME}/${item.image}`}\n//             alt={item.item_title}\n//             />\n//             </>\n//           )}\n//           <h2>Swaps:</h2>\n//           <ul>\n//             {swaps && swaps.length > 0 ? (\n//               swaps.map(swap => (\n//                 <li key={swap.id}>{swap.offer}</li>\n//               ))\n//             ) : (\n//               <li>No offers yet</li>\n//             )}\n//           </ul>\n//           <SwapForm onSubmit={handleFormSubmit} ownerId={item.user} />\n//         </div>\n//       ) : (\n//         <p>Loading...</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ItemViewPage;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport '../App/App.css';\nimport SwapForm from './SwapForm';\n\nfunction ItemViewPage() {\n  const { itemId } = useParams();\n  console.log(\"Item ID:\", itemId);\n\n  const [item, setItem] = useState(null);\n  const [swaps, setSwaps] = useState([]);\n\n  const handleFetchItem = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}`);\n      setItem(response.data);\n    } catch (error) {\n      console.error('Error fetching item:', error);\n      // Display an error message to the user\n    }\n  };\n\n  const handleFetchSwaps = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/swaps/`);\n      setSwaps(response.data);\n    } catch (error) {\n      console.error('Error fetching swaps:', error);\n      // Display an error message to the user\n    }\n  };\n\n  useEffect(() => {\n    handleFetchItem();\n    handleFetchSwaps();\n  }, [itemId]);\n\n  const handleFormSubmit = async (formData) => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/create-swap/`, formData);\n      console.log(\"Offer submitted:\", response.data);\n      // Update UI to show the submitted swap offer\n      // (e.g., re-fetch swaps or update state directly)\n      handleFetchSwaps(); // Example: Re-fetch swaps to update UI\n    } catch (error) {\n      console.error('Error submitting offer:', error);\n      // Display an error message to the user\n    }\n  };\n\n  if (!item) {\n    return <div>Loading item details...</div>;\n  }\n\n  return (\n    <div className=\"item-view-page\">\n      <h2>{item.item_title}</h2>\n      <p>{item.item_description}</p>\n      {/* Additional item details and functionalities... */}\n\n      <h3>Swaps</h3>\n      {swaps.length > 0 ? (\n        <ul>\n          {swaps.map((swap) => (\n            <li key={swap.id}>\n              {/* Display swap details */}\n              {/* (e.g., offerer username, offer description) */}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No swaps yet.</p>\n      )}\n\n      <h3>Submit a Swap Offer</h3>\n      <SwapForm onSubmit={handleFormSubmit} />\n    </div>\n  );\n}\n\nexport default ItemViewPage;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}