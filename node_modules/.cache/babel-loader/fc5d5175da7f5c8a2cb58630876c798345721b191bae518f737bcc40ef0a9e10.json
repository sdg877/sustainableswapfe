{"ast":null,"code":"var _jsxFileName = \"/Users/sylviadrake-gill/code/sustainableswapshop/frontend/my-react-app/src/Pages/ProfilePage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import { currentUser } from '../lib/currentUser';\n// import ItemEdit from '../Components/ItemEdit.jsx';\n\n// function ProfilePage() {\n//     const [userItems, setUserItems] = useState([]);\n//     const userToken = localStorage.getItem('access_token');\n//     const userId = currentUser();\n//     const [editingItemId, setEditingItemId] = useState(null);\n\n//     useEffect(() => {\n//         refreshUserItems(userId, userToken);\n//     }, [userToken, userId]);\n\n//     const refreshUserItems = (userId, userToken) => {\n//         axios.get(`${process.env.REACT_APP_BACKEND_URL}/profile/${userId}/items/`, {\n//             headers: {\n//                 Authorization: `Bearer ${userToken}`\n//             }\n//         })\n//         .then(response => {\n//             if (Array.isArray(response.data)) {\n//                 Promise.all(response.data.map(item =>\n//                     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${item.id}/swaps/`, {\n//                         headers: {\n//                             Authorization: `Bearer ${userToken}`\n//                         }\n//                     }).then(swapsResponse => {\n//                         item.swaps = swapsResponse.data;\n//                         return item;\n//                     })\n//                 )).then(itemsWithSwaps => {\n//                     setUserItems(itemsWithSwaps);\n//                 }).catch(error => {\n//                     console.error('Error fetching swaps for items:', error);\n//                 });\n//             } else {\n//                 console.error('Invalid response format for user items:', response.data);\n//             }\n//         })\n//         .catch(error => {\n//             console.error('Error fetching user items:', error);\n//         });\n//     };\n\n//     const handleDelete = (itemId) => {\n//         axios.delete(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/delete/`, {\n//             headers: {\n//                 Authorization: `Bearer ${userToken}`\n//             }\n//         })\n//         .then(response => {\n//             setUserItems(prevItems => prevItems.filter(item => item.id !== itemId));\n//         })\n//         .catch(error => {\n//             console.error('Error deleting item:', error);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <h1>Your Items</h1>\n//             <div className=\"card-container\">\n//                 {userItems.map(item => (\n//                     <div className=\"item-card\" key={item.id}>\n//                         {item && (\n//                             <>\n//                                 <Link to={`/items/${item.id}`}>\n//                                     <h2>{item.item_title}</h2>\n//                                 </Link>\n//                                 <p>{item.item_description}</p>\n//                                 <h4>Swaps:</h4>\n//                                 <div>\n//                                     {item.swaps && item.swaps.length > 0 ? (\n//                                         item.swaps.map(swap => (\n//                                             <p key={swap.id}>{swap.item_title}, {swap.item_description}</p>\n//                                         ))\n//                                     ) : (\n//                                         <p>No swaps yet</p>\n//                                     )}\n//                                 </div>\n//                                 <button className=\"btn btn-primary\" onClick={() => handleDelete(item.id)}>Delete</button>\n//                                 <button className=\"btn btn-primary\" onClick={() => setEditingItemId(item.id)}>Edit</button>\n//                             </>\n//                         )}\n//                     </div>\n//                 ))}\n//             </div>\n//             {editingItemId && (\n//                 <ItemEdit\n//                     itemId={editingItemId}\n//                     userToken={userToken}\n//                 />\n//             )}\n//         </div>\n//     );\n// }\n\n// export default ProfilePage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import { currentUser } from '../lib/currentUser';\n// import ItemEdit from '../Components/ItemEdit.jsx';\n\n// function ProfilePage() {\n//     const [userItems, setUserItems] = useState([]);\n//     const userToken = localStorage.getItem('access_token');\n//     const userId = currentUser();\n//     const [editingItemId, setEditingItemId] = useState(null);\n//     const [isLoading, setIsLoading] = useState(true);\n\n//     useEffect(() => {\n//         refreshUserItems(userId, userToken);\n//     }, [userToken, userId]);\n\n//     const refreshUserItems = (userId, userToken) => {\n//         axios.get(`${process.env.REACT_APP_BACKEND_URL}/profile/${userId}/items/`, {\n//             headers: {\n//                 Authorization: `Bearer ${userToken}`\n//             }\n//         })\n//         .then(response => {\n//             if (Array.isArray(response.data)) {\n//                 Promise.all(response.data.map(item =>\n//                     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${item.id}/swaps/`, {\n//                         headers: {\n//                             Authorization: `Bearer ${userToken}`\n//                         }\n//                     }).then(swapsResponse => {\n//                         item.swaps = swapsResponse.data;\n//                         return item;\n//                     })\n//                 )).then(itemsWithSwaps => {\n//                     setUserItems(itemsWithSwaps);\n//                     setIsLoading(false);\n//                 }).catch(error => {\n//                     console.error('Error fetching swaps for items:', error);\n//                     setIsLoading(false);\n//                 });\n//             } else {\n//                 console.error('Invalid response format for user items:', response.data);\n//                 setIsLoading(false);\n//             }\n//         })\n//         .catch(error => {\n//             console.error('Error fetching user items:', error);\n//             setIsLoading(false);\n//         });\n//     };\n\n//     const handleDelete = (itemId) => {\n//         axios.delete(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/delete/`, {\n//             headers: {\n//                 Authorization: `Bearer ${userToken}`\n//             }\n//         })\n//         .then(response => {\n//             setUserItems(prevItems => prevItems.filter(item => item.id !== itemId));\n//         })\n//         .catch(error => {\n//             console.error('Error deleting item:', error);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <h1>Your Items</h1>\n//             {isLoading ? (\n//                 <p>Loading...</p>\n//             ) : (\n//                 <>\n//                     {userItems.length > 0 ? (\n//                         <div className=\"card-container\">\n//                             {userItems.map(item => (\n//                                 <div className=\"item-card\" key={item.id}>\n//                                     {item && (\n//                                         <>\n//                                             <Link to={`/items/${item.id}`}>\n//                                                 <h2>{item.item_title}</h2>\n//                                             </Link>\n//                                             <p>{item.item_description}</p>\n//                                             <h4>Swaps:</h4>\n//                                             <div>\n//                                                 {item.swaps && item.swaps.length > 0 ? (\n//                                                     item.swaps.map(swap => (\n//                                                         <p key={swap.id}>{swap.item_title}, {swap.item_description}</p>\n//                                                     ))\n//                                                 ) : (\n//                                                     <p>No swaps yet</p>\n//                                                 )}\n//                                             </div>\n//                                             <button className=\"btn btn-primary\" onClick={() => handleDelete(item.id)}>Delete</button>\n//                                             <button className=\"btn btn-primary\" onClick={() => setEditingItemId(item.id)}>Edit</button>\n//                                         </>\n//                                     )}\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     ) : (\n//                         <div>\n//                             <p>No items yet</p>\n//                             <Link to=\"/items/create\" className=\"btn btn-primary\">Create Item</Link>\n//                         </div>\n//                     )}\n//                 </>\n//             )}\n//             {editingItemId && (\n//                 <ItemEdit\n//                     itemId={editingItemId}\n//                     userToken={userToken}\n//                 />\n//             )}\n//         </div>\n//     );\n// }\n\n// export default ProfilePage;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { currentUser } from '../lib/currentUser';\nimport ItemEdit from '../Components/ItemEdit.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [userItems, setUserItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const userToken = localStorage.getItem('access_token');\n  const userId = currentUser();\n  const [editingItemId, setEditingItemId] = useState(null);\n  useEffect(() => {\n    refreshUserItems(userId, userToken);\n  }, [userToken, userId]);\n  const refreshUserItems = (userId, userToken) => {\n    setIsLoading(true); // Set loading to true before making the request\n    axios.get(`${process.env.REACT_APP_BACKEND_URL}/profile/${userId}/items/`, {\n      headers: {\n        Authorization: `Bearer ${userToken}`\n      }\n    }).then(response => {\n      if (Array.isArray(response.data)) {\n        Promise.all(response.data.map(item => axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${item.id}/swaps/`, {\n          headers: {\n            Authorization: `Bearer ${userToken}`\n          }\n        }).then(swapsResponse => {\n          item.swaps = swapsResponse.data;\n          return item;\n        }))).then(itemsWithSwaps => {\n          setUserItems(itemsWithSwaps);\n          setIsLoading(false);\n        }).catch(error => {\n          console.error('Error fetching swaps for items:', error);\n          setIsLoading(false);\n        });\n      } else {\n        console.error('Invalid response format for user items:', response.data);\n        setIsLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error fetching user items:', error);\n      setIsLoading(false);\n    });\n  };\n  const handleDelete = itemId => {\n    axios.delete(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/delete/`, {\n      headers: {\n        Authorization: `Bearer ${userToken}`\n      }\n    }).then(response => {\n      setUserItems(prevItems => prevItems.filter(item => item.id !== itemId));\n    }).catch(error => {\n      console.error('Error deleting item:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }, this) : userItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: userItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-card\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/items/${item.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.item_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.item_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Swaps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.swaps && item.swaps.length > 0 ? item.swaps.map(swap => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [swap.item_title, \", \", swap.item_description]\n          }, swap.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 41\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No swaps yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => handleDelete(item.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => setEditingItemId(item.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No items yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/items/create\",\n        className: \"btn btn-primary\",\n        children: \"Create Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }, this), editingItemId && /*#__PURE__*/_jsxDEV(ItemEdit, {\n      itemId: editingItemId,\n      userToken: userToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"LJrgLWl1091bvlhmGE1cVOXXtxg=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","currentUser","ItemEdit","jsxDEV","_jsxDEV","ProfilePage","_s","userItems","setUserItems","isLoading","setIsLoading","userToken","localStorage","getItem","userId","editingItemId","setEditingItemId","refreshUserItems","get","process","env","REACT_APP_BACKEND_URL","headers","Authorization","then","response","Array","isArray","data","Promise","all","map","item","id","swapsResponse","swaps","itemsWithSwaps","catch","error","console","handleDelete","itemId","delete","prevItems","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","to","item_title","item_description","swap","onClick","_c","$RefreshReg$"],"sources":["/Users/sylviadrake-gill/code/sustainableswapshop/frontend/my-react-app/src/Pages/ProfilePage.jsx"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import { currentUser } from '../lib/currentUser';\n// import ItemEdit from '../Components/ItemEdit.jsx';\n\n// function ProfilePage() {\n//     const [userItems, setUserItems] = useState([]);\n//     const userToken = localStorage.getItem('access_token');\n//     const userId = currentUser();\n//     const [editingItemId, setEditingItemId] = useState(null);\n\n//     useEffect(() => {\n//         refreshUserItems(userId, userToken);\n//     }, [userToken, userId]);\n\n//     const refreshUserItems = (userId, userToken) => {\n//         axios.get(`${process.env.REACT_APP_BACKEND_URL}/profile/${userId}/items/`, {\n//             headers: {\n//                 Authorization: `Bearer ${userToken}`\n//             }\n//         })\n//         .then(response => {\n//             if (Array.isArray(response.data)) {\n//                 Promise.all(response.data.map(item =>\n//                     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${item.id}/swaps/`, {\n//                         headers: {\n//                             Authorization: `Bearer ${userToken}`\n//                         }\n//                     }).then(swapsResponse => {\n//                         item.swaps = swapsResponse.data;\n//                         return item;\n//                     })\n//                 )).then(itemsWithSwaps => {\n//                     setUserItems(itemsWithSwaps);\n//                 }).catch(error => {\n//                     console.error('Error fetching swaps for items:', error);\n//                 });\n//             } else {\n//                 console.error('Invalid response format for user items:', response.data);\n//             }\n//         })\n//         .catch(error => {\n//             console.error('Error fetching user items:', error);\n//         });\n//     };\n\n//     const handleDelete = (itemId) => {\n//         axios.delete(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/delete/`, {\n//             headers: {\n//                 Authorization: `Bearer ${userToken}`\n//             }\n//         })\n//         .then(response => {\n//             setUserItems(prevItems => prevItems.filter(item => item.id !== itemId));\n//         })\n//         .catch(error => {\n//             console.error('Error deleting item:', error);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <h1>Your Items</h1>\n//             <div className=\"card-container\">\n//                 {userItems.map(item => (\n//                     <div className=\"item-card\" key={item.id}>\n//                         {item && (\n//                             <>\n//                                 <Link to={`/items/${item.id}`}>\n//                                     <h2>{item.item_title}</h2>\n//                                 </Link>\n//                                 <p>{item.item_description}</p>\n//                                 <h4>Swaps:</h4>\n//                                 <div>\n//                                     {item.swaps && item.swaps.length > 0 ? (\n//                                         item.swaps.map(swap => (\n//                                             <p key={swap.id}>{swap.item_title}, {swap.item_description}</p>\n//                                         ))\n//                                     ) : (\n//                                         <p>No swaps yet</p>\n//                                     )}\n//                                 </div>\n//                                 <button className=\"btn btn-primary\" onClick={() => handleDelete(item.id)}>Delete</button>\n//                                 <button className=\"btn btn-primary\" onClick={() => setEditingItemId(item.id)}>Edit</button>\n//                             </>\n//                         )}\n//                     </div>\n//                 ))}\n//             </div>\n//             {editingItemId && (\n//                 <ItemEdit\n//                     itemId={editingItemId}\n//                     userToken={userToken}\n//                 />\n//             )}\n//         </div>\n//     );\n// }\n\n// export default ProfilePage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import { currentUser } from '../lib/currentUser';\n// import ItemEdit from '../Components/ItemEdit.jsx';\n\n// function ProfilePage() {\n//     const [userItems, setUserItems] = useState([]);\n//     const userToken = localStorage.getItem('access_token');\n//     const userId = currentUser();\n//     const [editingItemId, setEditingItemId] = useState(null);\n//     const [isLoading, setIsLoading] = useState(true);\n\n//     useEffect(() => {\n//         refreshUserItems(userId, userToken);\n//     }, [userToken, userId]);\n\n//     const refreshUserItems = (userId, userToken) => {\n//         axios.get(`${process.env.REACT_APP_BACKEND_URL}/profile/${userId}/items/`, {\n//             headers: {\n//                 Authorization: `Bearer ${userToken}`\n//             }\n//         })\n//         .then(response => {\n//             if (Array.isArray(response.data)) {\n//                 Promise.all(response.data.map(item =>\n//                     axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${item.id}/swaps/`, {\n//                         headers: {\n//                             Authorization: `Bearer ${userToken}`\n//                         }\n//                     }).then(swapsResponse => {\n//                         item.swaps = swapsResponse.data;\n//                         return item;\n//                     })\n//                 )).then(itemsWithSwaps => {\n//                     setUserItems(itemsWithSwaps);\n//                     setIsLoading(false);\n//                 }).catch(error => {\n//                     console.error('Error fetching swaps for items:', error);\n//                     setIsLoading(false);\n//                 });\n//             } else {\n//                 console.error('Invalid response format for user items:', response.data);\n//                 setIsLoading(false);\n//             }\n//         })\n//         .catch(error => {\n//             console.error('Error fetching user items:', error);\n//             setIsLoading(false);\n//         });\n//     };\n\n//     const handleDelete = (itemId) => {\n//         axios.delete(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/delete/`, {\n//             headers: {\n//                 Authorization: `Bearer ${userToken}`\n//             }\n//         })\n//         .then(response => {\n//             setUserItems(prevItems => prevItems.filter(item => item.id !== itemId));\n//         })\n//         .catch(error => {\n//             console.error('Error deleting item:', error);\n//         });\n//     };\n\n//     return (\n//         <div>\n//             <h1>Your Items</h1>\n//             {isLoading ? (\n//                 <p>Loading...</p>\n//             ) : (\n//                 <>\n//                     {userItems.length > 0 ? (\n//                         <div className=\"card-container\">\n//                             {userItems.map(item => (\n//                                 <div className=\"item-card\" key={item.id}>\n//                                     {item && (\n//                                         <>\n//                                             <Link to={`/items/${item.id}`}>\n//                                                 <h2>{item.item_title}</h2>\n//                                             </Link>\n//                                             <p>{item.item_description}</p>\n//                                             <h4>Swaps:</h4>\n//                                             <div>\n//                                                 {item.swaps && item.swaps.length > 0 ? (\n//                                                     item.swaps.map(swap => (\n//                                                         <p key={swap.id}>{swap.item_title}, {swap.item_description}</p>\n//                                                     ))\n//                                                 ) : (\n//                                                     <p>No swaps yet</p>\n//                                                 )}\n//                                             </div>\n//                                             <button className=\"btn btn-primary\" onClick={() => handleDelete(item.id)}>Delete</button>\n//                                             <button className=\"btn btn-primary\" onClick={() => setEditingItemId(item.id)}>Edit</button>\n//                                         </>\n//                                     )}\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     ) : (\n//                         <div>\n//                             <p>No items yet</p>\n//                             <Link to=\"/items/create\" className=\"btn btn-primary\">Create Item</Link>\n//                         </div>\n//                     )}\n//                 </>\n//             )}\n//             {editingItemId && (\n//                 <ItemEdit\n//                     itemId={editingItemId}\n//                     userToken={userToken}\n//                 />\n//             )}\n//         </div>\n//     );\n// }\n\n// export default ProfilePage;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { currentUser } from '../lib/currentUser';\nimport ItemEdit from '../Components/ItemEdit.jsx';\n\nfunction ProfilePage() {\n    const [userItems, setUserItems] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const userToken = localStorage.getItem('access_token');\n    const userId = currentUser();\n    const [editingItemId, setEditingItemId] = useState(null);\n\n    useEffect(() => {\n        refreshUserItems(userId, userToken);\n    }, [userToken, userId]);\n\n    const refreshUserItems = (userId, userToken) => {\n        setIsLoading(true); // Set loading to true before making the request\n        axios.get(`${process.env.REACT_APP_BACKEND_URL}/profile/${userId}/items/`, {\n            headers: {\n                Authorization: `Bearer ${userToken}`\n            }\n        })\n        .then(response => {\n            if (Array.isArray(response.data)) {\n                Promise.all(response.data.map(item =>\n                    axios.get(`${process.env.REACT_APP_BACKEND_URL}/items/${item.id}/swaps/`, {\n                        headers: {\n                            Authorization: `Bearer ${userToken}`\n                        }\n                    }).then(swapsResponse => {\n                        item.swaps = swapsResponse.data;\n                        return item;\n                    })\n                )).then(itemsWithSwaps => {\n                    setUserItems(itemsWithSwaps);\n                    setIsLoading(false); \n                }).catch(error => {\n                    console.error('Error fetching swaps for items:', error);\n                    setIsLoading(false); \n                });\n            } else {\n                console.error('Invalid response format for user items:', response.data);\n                setIsLoading(false); \n            }\n        })\n        .catch(error => {\n            console.error('Error fetching user items:', error);\n            setIsLoading(false); \n        });\n    };\n\n    const handleDelete = (itemId) => {\n        axios.delete(`${process.env.REACT_APP_BACKEND_URL}/items/${itemId}/delete/`, {\n            headers: {\n                Authorization: `Bearer ${userToken}`\n            }\n        })\n        .then(response => {\n            setUserItems(prevItems => prevItems.filter(item => item.id !== itemId));\n        })\n        .catch(error => {\n            console.error('Error deleting item:', error);\n        });\n    };\n\n    return (\n        <div>\n            <h1>Your Items</h1>\n            {isLoading ? (\n                <p>Loading...</p>\n            ) : userItems.length > 0 ? (\n                <div className=\"card-container\">\n                    {userItems.map(item => (\n                        <div className=\"item-card\" key={item.id}>\n                            <Link to={`/items/${item.id}`}>\n                                <h2>{item.item_title}</h2>\n                            </Link>\n                            <p>{item.item_description}</p>\n                            <h4>Swaps:</h4>\n                            <div>\n                                {item.swaps && item.swaps.length > 0 ? (\n                                    item.swaps.map(swap => (\n                                        <p key={swap.id}>{swap.item_title}, {swap.item_description}</p>\n                                    ))\n                                ) : (\n                                    <p>No swaps yet</p>\n                                )}\n                            </div>\n                            <button className=\"btn btn-primary\" onClick={() => handleDelete(item.id)}>Delete</button>\n                            <button className=\"btn btn-primary\" onClick={() => setEditingItemId(item.id)}>Edit</button>\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <div>\n                    <p>No items yet</p>\n                    <Link to=\"/items/create\" className=\"btn btn-primary\">Create Item</Link>\n                </div>\n            )}\n            {editingItemId && (\n                <ItemEdit\n                    itemId={editingItemId}\n                    userToken={userToken}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePage;\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}